[{"path":"index.html","id":"about-this-training","chapter":"1 About this training","heading":"1 About this training","text":"Keeping track changes statistical code key reducing errors boosting teamwork projects. However, many public health professionals, including epidemiologists, haven’t trained manage changes, might leave wondering integration IRB protocols privacy rules. website, ’ll dive basics Git GitHub. ’re show tools can help confidently ethically manage code changes, making research smoother secure.Questions? Comments?Contact us datasci.ph@gmail.com questions, comments, feedback!","code":""},{"path":"workshop-setup.html","id":"workshop-setup","chapter":"2 Workshop Setup","heading":"2 Workshop Setup","text":"pre-workshop guide designed walk initial setup git computer.issues, please reach us datasci.ph@gmail.com.","code":""},{"path":"workshop-setup.html","id":"introduction","chapter":"2 Workshop Setup","heading":"2.1 Introduction","text":"Git version control system allows track changes code.order get setup, need install git computer, make GitHub account, configure git computer.get details use git workshop, requesting complete following steps workshop can spend workshop time using Git rather setup!","code":""},{"path":"workshop-setup.html","id":"install-r-and-rstudio-if-you-have-not-already","chapter":"2 Workshop Setup","heading":"2.2 Install R and RStudio if you have not already:","text":"https://posit.co/download/rstudio-desktop/","code":""},{"path":"workshop-setup.html","id":"open-rstudio-and-install-the-following-packages","chapter":"2 Workshop Setup","heading":"2.3 Open RStudio and install the following packages:","text":"tidyverseusethisgitcredsbroomTo , run following code RStudio console:\ninstall.packages('tidyverse')\npackages.packages fail install, please let us know. may need update RStudio try help get everything set minimal interruption work.","code":""},{"path":"workshop-setup.html","id":"create-a-github-account","chapter":"2 Workshop Setup","heading":"2.4 Create a github account","text":"https://github.com/","code":""},{"path":"workshop-setup.html","id":"install-git","chapter":"2 Workshop Setup","heading":"2.5 Install Git","text":"Follow instructions following slides install git computer. Select slides correspond Windows Mac depending machine using.","code":""},{"path":"workshop-setup.html","id":"windows-instructions","chapter":"2 Workshop Setup","heading":"2.5.1 Windows Instructions","text":"Download Git Windows : https://gitforwindows.org/. lots things click .Notes HappyGitWithR:\n- asked “Adjusting PATH environment”, make sure select “Git command line also 3rd-party software”. Otherwise, believe good accept defaults.\n- Note RStudio Windows prefers Git installed C:/Program Files appears default. implies, example, Git executable Windows system found C:/Program Files/Git/bin/git.exe. Unless specific reasons otherwise, follow convention.Start menu > Git > Git Bash. Confirm access Git Bash.Start menu > Git > Git Bash. Confirm access Git Bash.RStudio next\nRStudio automatically detect presence Git Bash. can inspect influence directly via Tools > Global Options > Terminal. Unless good reason otherwise, want see “Git Bash” “New terminals open …” dropdown menu.RStudio next\nRStudio automatically detect presence Git Bash. can inspect influence directly via Tools > Global Options > Terminal. Unless good reason otherwise, want see “Git Bash” “New terminals open …” dropdown menu.next set tasks done RStudio. code run commands found file code/00_Setup-instructions--Windows.R. running commands ready use GitHub Shell. (Currently, instructions include setting Git client.)next set tasks done RStudio. code run commands found file code/00_Setup-instructions--Windows.R. running commands ready use GitHub Shell. (Currently, instructions include setting Git client.)","code":""},{"path":"workshop-setup.html","id":"mac-instructions","chapter":"2 Workshop Setup","heading":"2.5.2 Mac Instructions","text":"Type git –version terminal check git installed. , see version number. , type:\ngit config enter. prompted install Git follow prompts!","code":""},{"path":"workshop-setup.html","id":"configure-git-using-an-https-token","chapter":"2 Workshop Setup","heading":"2.6 Configure Git using an HTTPS token","text":"Load usethis & gitcreds:Pick user name - need GitHub user name. email address linked GitHub account:installed packages, need create personal access token. way authenticate GitHub. need order push pull repository. Run following:usethis::create_github_token()bring browser page. Put description token select expiration date drop - please select expiration. Scroll click Generate token button. Copy token generated paste somewhere able access .Go back R run following:gitcreds::gitcreds_set()prompted, paste token copied. add credentials cache. following print RStudio console:","code":"library(usethis)\nlibrary(gitcreds)use_git_config(user.name = \"Corinne Riddell on Dell\",\n               user.email = \"corinne.riddell@gmail.com\")? Enter password or token: ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  \n-> Adding new credentials...\n-> Removing credentials from cache...\n-> Done."},{"path":"workshop-setup.html","id":"resources","chapter":"2 Workshop Setup","heading":"2.7 Resources","text":"now set use Git Github! issues, links can look help. still trouble, please reach us workshop!Happy Git RHappy Git RGit Setup BookGit Setup Book","code":""},{"path":"why-git-and-github.html","id":"why-git-and-github","chapter":"3 Why Git and GitHub","heading":"3 Why Git and GitHub","text":"","code":""},{"path":"why-git-and-github.html","id":"what-is-version-control-git-and-github","chapter":"3 Why Git and GitHub","heading":"3.1 What is version control, Git, and Github?","text":"Version control practice tracking managing changes \n(statistical) code files.\nGit version control system. tracks changed file,\nsynchronizes changes central server multiple\ncontributors can manage changes set files (Wilson et al., 2017).\nGitHub hosting service web Git repositories.\n","code":""},{"path":"why-git-and-github.html","id":"the-case-for-version-control","chapter":"3 Why Git and GitHub","heading":"3.2 The case for version control","text":"","code":""},{"path":"why-git-and-github.html","id":"error-reducing","chapter":"3 Why Git and GitHub","heading":"3.2.1 Error reducing","text":"Version control eliminates need send code outputs (graphics,\nreports) via email share folders collaborators. version\ncontrol system, everyone access recent set files.","code":""},{"path":"why-git-and-github.html","id":"version-control-facilitates-reproducible-analyses","chapter":"3 Why Git and GitHub","heading":"3.2.2 Version control facilitates reproducible analyses","text":"ever tried reproduce analysis 3 years ago? ever tried reproduce someone else’s analysis? ever found links don’t work computer? access data?","code":""},{"path":"why-git-and-github.html","id":"version-control-facilitates-reproducible-analyses-1","chapter":"3 Why Git and GitHub","heading":"3.2.3 Version control facilitates reproducible analyses","text":"everyone access files, project’s workflow can set \nensures analyses reproducible everyone.R, can simple hitting “knit” button run analyses\nanyone’s computer – need update file pathways, need download\nnew versions code data.","code":""},{"path":"why-git-and-github.html","id":"makes-supervision-and-collaboration-easier","chapter":"3 Why Git and GitHub","heading":"3.2.4 Makes supervision and collaboration easier","text":"Github, can easily view changes made statistical code. \nworking together, easy tell lines code changed,\nalongside downstream changes reports data visualizations result \nchange analysis.","code":""},{"path":"why-git-and-github.html","id":"rollback-capabilities","chapter":"3 Why Git and GitHub","heading":"3.2.5 Rollback capabilities","text":"can use Git roll back previous version file point. , search commit ID version want revert use git checkout {commit ID} command revert version. useful team decides change made code beneficial wants revert back different strategy used previously.","code":""},{"path":"why-git-and-github.html","id":"github-supports-expeditious-sharing-of-scientific-approaches-and-findings","chapter":"3 Why Git and GitHub","heading":"3.2.6 Github supports expeditious sharing of scientific approaches and findings","text":"Anything posted GitHub can shared widely organization \npublic.Reference: Wilson G, et al. Good enough practices scientific computing. PLoS Comp Bio. 2017.","code":""},{"path":"git-jargon-alice-bartlett.html","id":"git-jargon-alice-bartlett","chapter":"4 Git Jargon (Alice Bartlett)","heading":"4 Git Jargon (Alice Bartlett)","text":"Write blurb Alice’s slides, link slides, show screenshot first slide.","code":""},{"path":"setup-of-solo-workflow.html","id":"setup-of-solo-workflow","chapter":"5 Setup of Solo Workflow","heading":"5 Setup of Solo Workflow","text":"","code":""},{"path":"setup-of-solo-workflow.html","id":"outline-for-this-section","chapter":"5 Setup of Solo Workflow","heading":"5.1 Outline for this section","text":"discussed Git GitHub important, now set repository work example. first section, working repository alone. :Make new repository GitHubClone repository local machineWrite code repository locallyPush code repositoryMerge branch main","code":""},{"path":"setup-of-solo-workflow.html","id":"working-in-terminal-mac-and-bash-windows","chapter":"5 Setup of Solo Workflow","heading":"5.2 Working in Terminal (Mac) and Bash (Windows)","text":"use Terminal Bash applications interact Git laptops.Mac Terminal window. looks similar Windows Bash window.session, supply Git code manually input\nTerminal/Bash windows. Note code written \ndollar sign figure .","code":""},{"path":"setup-of-solo-workflow.html","id":"working-in-terminal-mac-and-bash-windows-1","chapter":"5 Setup of Solo Workflow","heading":"5.3 Working in Terminal (Mac) and Bash (Windows)","text":"example command git branch, followed output printed\nscreen:","code":""},{"path":"setup-of-solo-workflow.html","id":"folder-names-and-file-names-tips","chapter":"5 Setup of Solo Workflow","heading":"5.4 Folder names and file names tips","text":"Recall name variable SAS R, variable name \ncontain spaces unusual characters.best practice use spaces unusual characters folder\nfile names, even though spaces permissible commonly used Windows\nMac Users.","code":""},{"path":"setup-of-solo-workflow.html","id":"good-folder-names","chapter":"5 Setup of Solo Workflow","heading":"5.5 Good folder names…","text":"Use dashes place spacesUse capitalization instead spaces","code":""},{"path":"setup-of-solo-workflow.html","id":"good-folder-names-examples","chapter":"5 Setup of Solo Workflow","heading":"5.5.1 Good folder names examples","text":"life-expectancylifeExpectancyLifeExpectancy","code":""},{"path":"setup-of-solo-workflow.html","id":"what-is-the-problem-with-spaces-anyway","chapter":"5 Setup of Solo Workflow","heading":"5.6 What is the problem with spaces, anyway?","text":"spaces human-readable aren’t machine-friendly.refer folder file using Git Terminal Bash, name\nwithout spaces much easier type (otherwise insert \nbackslash space)Spaces also break auto-complete function Git users love. \nfrustrating experience.","code":""},{"path":"setup-of-solo-workflow.html","id":"good-file-names-are","chapter":"5 Setup of Solo Workflow","heading":"5.7 Good file names are…","text":"machine readablehuman readableplay well default orderingSee file “--name-files.pdf” deeper dive file naming.","code":""},{"path":"setup-of-solo-workflow.html","id":"good-file-names-examples","chapter":"5 Setup of Solo Workflow","heading":"5.7.1 Good file names examples","text":"Filenames start number (padded 0) order files according \norder performed analysisThis followed short (human machine readable) descriptor \nfile doesUses underscore “_” delimit field, dashes “-” separate words within field","code":""},{"path":"setup-of-solo-workflow.html","id":"bad-file-name-example-and-associated-git-pain","chapter":"5 Setup of Solo Workflow","heading":"5.7.2 Bad file name example (and associated Git pain)","text":"Can see R markdown (Rmd) file named “Data Visualization Evaluation Report” modified.pain arises go git add file. space, need \ninclude backslash (looks ugly). Even worse, space breaks auto-complete happens press “tab” auto-complete file name.\nAuto-complete become friend use Git, able \nuse sad/infuriating grown love .","code":""},{"path":"setup-of-solo-workflow.html","id":"set-up-a-project-that-you-want-to-track-with-git-and-github","chapter":"5 Setup of Solo Workflow","heading":"5.8 Set up a project that you want to track with git and GitHub","text":"Let’s suppose project want start tracking using Git\nGithub. project, already working code, data,\nvisualizations already saved. made project \n. download , run following two commands RStudio console:R asked want folder copied onto Desktop. Select Yes.R display messages showing folder downloaded unzipped.\nTell R whether delete file.RStudio open. Click code folder file viewer. , click\nfilename “01_Analyze-life-expectancy.R” open file RStudio.Run code .R file just downloaded. Note created figure \nsaved images sub-folder.Now set existing code things might want start\ntracking GitHub. next thing make folder GitHub \nstore project.","code":"\ninstall.packages(\"usethis\")\nusethis::use_course(\"corinne-riddell/existing-project\")"},{"path":"setup-of-solo-workflow.html","id":"make-a-new-repository-on-github","chapter":"5 Setup of Solo Workflow","heading":"5.9 Make a new repository on GitHub","text":"Go github.com log . Click green “New” button make GitHub\nrepository. Type “life-expectancy” repository name.Write whatever want description. example, type “analysis life expectancy US”Select either make public private repository.Check box next Add README file. tells Git create file can describe project. now, can write sentence practice repository workshop.Choose .gitignore template: R. tells Git use defaults work well R users.Choose MIT License. relates licensing code, relevant workshop.Click “Create repository”. Github bring repository’s\nmain page.","code":""},{"path":"setup-of-solo-workflow.html","id":"clone-the-repository-to-your-local-machine","chapter":"5 Setup of Solo Workflow","heading":"5.10 Clone the repository to your local machine","text":"main page repository click green Code button.’ll see URL starts https://. Push icon two overlapping\nsquares copy URL clipboard. [Lauren, written differently use SSH one… reason use one ?]Open terminal (Mac) bash (Windows) program. Navigate want place\nrepository using cd {folder_name} command. write\ngit clone {paste url copied } \npress return/enter button. following display Terminal/Bash\nsuccessful:now ready begin tracking changes folder using Git GitHub.","code":"Biostat-MBP13-20:repos corinneriddell$ git clone https://github.com/corinne-riddell/life-expectancy.git\n\nCloning into 'life-expectancy'...\nremote: Enumerating objects: 5, done.\nremote: Counting objects: 100% (5/5), done.\nremote: Compressing objects: 100% (5/5), done.\nremote: Total 5 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (5/5), done."},{"path":"setup-of-solo-workflow.html","id":"get-oriented-to-the-new-directory","chapter":"5 Setup of Solo Workflow","heading":"5.11 Get oriented to the new directory","text":"get oriented, following Terminal/Bash window:Navigate repository typing cd life-expectancy/.Type git status. results shows changes made yet:Type git branch. shows currently main branch.","code":"Biostat-MBP13-20:life-expectancy corinneriddell$git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree cleanBiostat-MBP13-20:life-expectancy corinneriddell$git branch\n* main"},{"path":"setup-of-solo-workflow.html","id":"make-your-first-branch","chapter":"5 Setup of Solo Workflow","heading":"5.12 Make your first branch","text":"Set new branch main. terminal/bash:Type git checkout -b may3-XY, replacing XY initials. (today\nMay 3, replace “may3” today’s date.)Type git branch, confirm indeed switched \nnew branch.","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git checkout -b may3-cr\nSwitched to a new branch 'may3-cr'Biostat-MBP13-20:life-expectancy corinneriddell$ git branch\n  main\n* may3-cr"},{"path":"setup-of-solo-workflow.html","id":"make-some-changes-to-your-code","chapter":"5 Setup of Solo Workflow","heading":"5.13 Make some changes to your code","text":"Okay, now set track changes. Let’s following:Copy code/ data/ images/ sub-folders “existing-project” folder \n“life-expectancy” folder.","code":""},{"path":"setup-of-solo-workflow.html","id":"commit-the-changes-that-you-made-and-push-them-to-github","chapter":"5 Setup of Solo Workflow","heading":"5.14 Commit the changes that you made and push them to GitHub","text":"Go back terminal bash. Type git status. output tell \nchanged. tells us untracked files:want track code/, data/ images/ subfolders just copied , \nwell life-expectancy.Rproj file.Use git add add newly-added files tracked. use git status\nconfirm added everything want track:Note: Computers create files don’t want track. example, Macs create\n.DS_Store files. Another example Windows creates temporary files Word\ndoc Excel spreadsheet open. see weird files listed \nUntracked files list. don’t need worry don’t want\ntrack changes files.Commit changes locally: git commit -m 'commit message', replace\n‘commit message’ short message ’ve done (keep \nquotes around message). example, message something like\ngit commit -m \"added first set files\".Push changes GitHub: git push origin -branch-name, replacing\n-branch-name name branch. don’t remember branch’s\nname, type git branch print screen git push command.successfully pushed changes GitHub!","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git status\nOn branch may3-cr\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n    .DS_Store\n    code/\n    data/\n    images/\n    life-expectancy.RprojBiostat-MBP13-20:life-expectancy corinneriddell$ git add code/\nBiostat-MBP13-20:life-expectancy corinneriddell$ git add data/\nBiostat-MBP13-20:life-expectancy corinneriddell$ git add images/\nBiostat-MBP13-20:life-expectancy corinneriddell$ git add life-expectancy.Rproj \nBiostat-MBP13-20:life-expectancy corinneriddell$ git status\nOn branch may3-cr\nChanges to be committed:\n  (use \"git restore --staged <file>...\" to unstage)\n    new file:   code/01_Analyze-life-expectancy.R\n    new file:   data/Life-expectancy-by-state-long.csv\n    new file:   images/ca-black-women-LE.png\n    new file:   images/placeholder.md\n    new file:   life-expectancy.Rproj\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n    .DS_StoreBiostat-MBP13-20:life-expectancy corinneriddell$ git commit -m \"added first set of files\"\n[may3-cr 58fcc58] added first set of files\n5 files changed, 7253 insertions(+)\ncreate mode 100644 code/01_Analyze-life-expectancy.R\ncreate mode 100644 data/Life-expectancy-by-state-long.csv\ncreate mode 100644 images/ca-black-women-LE.png\ncreate mode 100644 images/placeholder.md\ncreate mode 100644 life-expectancy.RprojBiostat-MBP13-20:life-expectancy corinneriddell$ git push origin may3-cr\nEnumerating objects: 11, done.\nCounting objects: 100% (11/11), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (9/9), done.\nWriting objects: 100% (10/10), 136.50 KiB | 10.50 MiB/s, done.\nTotal 10 (delta 0), reused 0 (delta 0)\nremote: \nremote: Create a pull request for 'may3-cr' on GitHub by visiting:\nremote:      https://github.com/corinne-riddell/life-expectancy/pull/new/may3-cr\nremote: \nTo https://github.com/corinne-riddell/life-expectancy.git\n * [new branch]      may3-cr -> may3-cr\n"},{"path":"setup-of-solo-workflow.html","id":"merge-the-changes-from-your-branch-into-main","chapter":"5 Setup of Solo Workflow","heading":"5.15 Merge the changes from your branch into main","text":"Navigate GitHub.com repository’s URL. pale yellow\nbanner informing changes just pushed. Click button\n“Compare & pull request”. Notice title commit message \nprevious step. Scroll . Look files added.\ncode shown green, indicating every line code new.\ncsv data file added rendered large\npng file displayed.\ncode shown green, indicating every line code new.csv data file added rendered largeThe png file displayed.Click green “Create pull request” button. Github check \nable merge branch main without problems. Note message “\nbranch conflicts base branch”. means good go!Click green “Merge pull request” button.Click green “Confirm merge” button.Click “Delete branch” button.","code":""},{"path":"setup-of-solo-workflow.html","id":"summary","chapter":"5 Setup of Solo Workflow","heading":"5.16 Summary","text":"setup folder laptop Git used track changes made\nlocally laptop.linked folder GitHub.com changes can tracked\nexternally GitHub.compared changes made locally branch main branch \nGitHub pulled changes main. means main branch \nupdated changes GitHub.","code":""},{"path":"setup-of-solo-workflow.html","id":"tracking-changes","chapter":"5 Setup of Solo Workflow","heading":"5.17 Tracking changes","text":"Now suppose days gone ready work analysis\nproject. particular, want update code affect \nresults “outputs”, outputs results saved form. \nsection, outline process follow want implement \nset tracked changes.","code":""},{"path":"setup-of-solo-workflow.html","id":"get-setup-for-a-new-day-of-work","chapter":"5 Setup of Solo Workflow","heading":"5.18 Get setup for a new day of work","text":"first thing need make sure good place git \nGitHub:Open bash terminal navigate life-expectancy folder using\ncd command.Check branch currently using git branch. local branch\nnames displayed. asterisk next branch currently .Check forgot save anything last time using git status.\nIdeally, saved changes nothing add/track/commit.\nstatus:one untracked file: .DS_Store. okay since internal\nfile used Mac OS need tracked. just want ensure\ncode files outputs intended track forgotton.likely still branch last day. case, navigate\nback main using git checkout main.want double check, type git branch confirm \nmain.can also delete “may3-XY” branch since longer need track \nlocally:CORINNE TODO: HOME COMPUTER DELETE MAY3 BRANCH LE REPO CAN\nGRAB CORRECT CODE “” REPLACE .","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git branch\n  main\n* may3-crBiostat-MBP13-20:life-expectancy corinneriddell$ git status\nOn branch may3-cr\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n    .DS_Store\n\nnothing added to commit but untracked files present (use \"git add\" to track)Biostat-MBP13-20:life-expectancy corinneriddell$ git checkout main\nSwitched to branch 'main'\nYour branch is up to date with 'origin/main'.Biostat-MBP13-20:life-expectancy corinneriddell$ git branch\n* main\n  may3-crBiostat-MBP13-20:github-training corinneriddell$ git branch -d may3-cr\nDeleted branch may3-cr (was 761bb97)."},{"path":"setup-of-solo-workflow.html","id":"pull-down-the-changes-from-main","chapter":"5 Setup of Solo Workflow","heading":"5.19 Pull down the changes from main","text":"local copy main. needs pull changes \nmade made GitHub earlier step. , type git pull origin main.\ngraphic drawn summarizes files updated \nmuch.","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git pull origin main\nremote: Enumerating objects: 1, done.\nremote: Counting objects: 100% (1/1), done.\nremote: Total 1 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (1/1), done.\nFrom https://github.com/corinne-riddell/life-expectancy\n * branch            main       -> FETCH_HEAD\n   884028e..5f81e34  main       -> origin/main\nUpdating 884028e..5f81e34\nFast-forward\n code/01_Analyze-life-expectancy.R      |   38 +\n data/Life-expectancy-by-state-long.csv | 7201 +++++++++++++++++++++++++++++++++\n images/ca-black-women-LE.png           |  Bin 0 -> 74550 bytes\n images/placeholder.md                  |    1 +\n life-expectancy.Rproj                  |   13 +\n 5 files changed, 7253 insertions(+)\n create mode 100644 code/01_Analyze-life-expectancy.R\n create mode 100644 data/Life-expectancy-by-state-long.csv\n create mode 100644 images/ca-black-women-LE.png\n create mode 100644 images/placeholder.md\n create mode 100644 life-expectancy.Rproj"},{"path":"setup-of-solo-workflow.html","id":"start-a-new-branch","chapter":"5 Setup of Solo Workflow","heading":"5.20 Start a new branch","text":"Like last day, start new branch track today’s changes. Let’s\npretend now May 7. Type git checkout -b may7-XY, XY replaced\ninitials. Type git branch confirm changed branches.","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git checkout -b may7-cr\nSwitched to a new branch 'may7-cr'\nBiostat-MBP13-20:life-expectancy corinneriddell$ git branch\n  main\n* may7-cr"},{"path":"setup-of-solo-workflow.html","id":"you-are-now-ready-to-make-changes","chapter":"5 Setup of Solo Workflow","heading":"5.21 You are now ready to make changes!","text":"Think like advance. particular, suppose \nwant :make table summarizes mean life expectancy race \ngender state ,make table summarizes mean life expectancy race \ngender state ,save table CSV file data folder.save table CSV file data folder.Re-launch RStudio double-clicking .Rproj file file viewer\nwindow. Navigate code file 01_Analyze-life-expectancy.R insert \nfollowing R code (working R) SAS code (working SAS) make save table:Re-launch RStudio double-clicking .Rproj file file viewer\nwindow. Navigate code file 01_Analyze-life-expectancy.R insert \nfollowing R code (working R) SAS code (working SAS) make save table:","code":"# R Code\n\n# Calculate the LE for each state, separately by race and gender:\nle_averages <- le_data %>% \n  group_by(state, race, sex) %>%\n  summarise(mean_LE = mean(LE)) \n\n# print the first 10 rows to the screen. By default, R rounds the numeric \n# information in the display to make it more compact \nle_averages\n# alternatively, type View(le_averages) in the Console to open up a Viewer \n# window, or click the table icon beside the le_averages objects in the \n# Environment pane (upper right hand panel of RStudio).\n\n#save this table as a CSV file in the data sub-folder\nwrite_csv(le_averages, \"./data/le_averages.csv\")/*SAS Code*/\n\n/*Calculate the LE for each state, separately by race and gender:*/\nproc sort data=le_data; by state race sex; run;\nproc means data=le_data; by state race sex; var le; output out=le_averages mean=mean_le ; run;\n\n/*Print the first 10 rows to the screen*/\nproc print data=le_averages (obs=10); run;\n/*Or you could just open the dataset to browse it.*/\n\n/*Export this file to a .csv file \n(if you use the following code, don't forget to replace YourFilePathHere with the appropriate file path!)*/\nPROC EXPORT DATA= WORK.LE_AVERAGES \n            OUTFILE= \"YourFilePathHere\\data\\le_averages.csv\" \n            DBMS=CSV REPLACE;\n     PUTNAMES=YES;\nRUN;"},{"path":"setup-of-solo-workflow.html","id":"track-your-changes-using-git","chapter":"5 Setup of Solo Workflow","heading":"5.22 Track your changes using Git","text":"Re-run previous R code (highlight previous code hit\ncommand + Return [Mac] control + Enter [Windows]). run newly-added\ncode line line see . Save updated .R file pushing\nsave icon.Re-run previous R code (highlight previous code hit\ncommand + Return [Mac] control + Enter [Windows]). run newly-added\ncode line line see . Save updated .R file pushing\nsave icon.Track changes using Git. Go bash/terminal window. Type “git status”.\nfiles modified? files new untracked?Track changes using Git. Go bash/terminal window. Type “git status”.\nfiles modified? files new untracked?","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git status\nOn branch may7-cr\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n    modified:   code/01_Analyze-life-expectancy.R\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n    .DS_Store\n    data/le_averages.csv"},{"path":"setup-of-solo-workflow.html","id":"add-new-and-modified-files","chapter":"5 Setup of Solo Workflow","heading":"5.23 Add new and modified files","text":"Use git add add specific files modified created.\nAdd one one. Use git status check changed files\ntracked. satisfied, commit changes locally.","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git add code/01_Analyze-life-expectancy.R \nBiostat-MBP13-20:life-expectancy corinneriddell$ git add data/le_averages.csv \nBiostat-MBP13-20:life-expectancy corinneriddell$ git status\nOn branch may7-cr\nChanges to be committed:\n  (use \"git restore --staged <file>...\" to unstage)\n    modified:   code/01_Analyze-life-expectancy.R\n    new file:   data/le_averages.csv\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n    .DS_Store"},{"path":"setup-of-solo-workflow.html","id":"commit-the-changes-locally","chapter":"5 Setup of Solo Workflow","heading":"5.24 Commit the changes locally","text":"Helpful hint: Terminal/Bash plays well autocomplete. example, \ntyping pathway .R file “code/…” can push tab button\ntyping name autocomplete. makes selecting \nspecific files commit much easier.“git commit -m ‘message’”. Replace ‘message’ short message\ndescribing changes. Remember keep quotes around message!","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git commit -m 'calc LE averages' \n[may7-cr a7435b8] calc LE averages\n 2 files changed, 177 insertions(+), 1 deletion(-)\n create mode 100644 data/le_averages.csv"},{"path":"setup-of-solo-workflow.html","id":"push-the-changes-up-to-github","chapter":"5 Setup of Solo Workflow","heading":"5.25 Push the changes up to GitHub","text":"now ready push changes GitHub onto GitHub’s version\nlocal branch. First, remind branch’s name using\n“git branch”. push: git push origin {-BRANCH-NAME}, replacing\n{-BRANCH-NAME} name branch.","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git branch\n  main\n* may7-cr\nBiostat-MBP13-20:life-expectancy corinneriddell$ git push origin may7-cr\nEnumerating objects: 10, done.\nCounting objects: 100% (10/10), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (6/6), done.\nWriting objects: 100% (6/6), 2.84 KiB | 2.84 MiB/s, done.\nTotal 6 (delta 2), reused 0 (delta 0)\nremote: Resolving deltas: 100% (2/2), completed with 2 local objects.\nremote: \nremote: Create a pull request for 'may7-cr' on GitHub by visiting:\nremote:      https://github.com/corinne-riddell/life-expectancy/pull/new/may7-cr\nremote: \nTo https://github.com/corinne-riddell/life-expectancy.git\n * [new branch]      may7-cr -> may7-cr"},{"path":"setup-of-solo-workflow.html","id":"create-a-pull-request","chapter":"5 Setup of Solo Workflow","heading":"5.26 Create a pull request","text":"Navigate GitHub.com go steps described previously \ncreate pull request pull changes main.","code":""},{"path":"setup-of-solo-workflow.html","id":"changes-after-receiving-an-updated-dataset","chapter":"5 Setup of Solo Workflow","heading":"5.27 Changes after receiving an updated dataset","text":"Another week goes . now May 14. received email \nerror data file used conduct analysis. new data file\nsecurely transferred data holder. need rerun analysis\nusing new dataset. new data file one called “LEbsyrx.csv” \ndata folder.","code":""},{"path":"setup-of-solo-workflow.html","id":"get-ready-for-the-day","chapter":"5 Setup of Solo Workflow","heading":"5.28 Get ready for the day","text":"Set work git GitHub day:Set work git GitHub day:git branch: see branch .git branch: see branch .git status: confirm committed everything wanted commit.git checkout main: switch main branchgit branch -d may7-cr: delete old branch (change “cr” initials)git pull origin main: pull GitHub’s copy main branch update \nlocal version. Examine figure made git changes.","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git branch\n  main\n* may7-crBiostat-MBP13-20:life-expectancy corinneriddell$ git status\nOn branch may7-cr\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n    .DS_Store\n\nnothing added to commit but untracked files present (use \"git add\" to track)Biostat-MBP13-20:life-expectancy corinneriddell$ git checkout main\nSwitched to branch 'main'\nYour branch is up to date with 'origin/main'.Biostat-MBP13-20:life-expectancy corinneriddell$ git pull origin main\nremote: Enumerating objects: 1, done.\nremote: Counting objects: 100% (1/1), done.\nremote: Total 1 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (1/1), done.\nFrom https://github.com/corinne-riddell/life-expectancy\n * branch            main       -> FETCH_HEAD\n   5f81e34..e15298a  main       -> origin/main\nUpdating 5f81e34..e15298a\nFast-forward\n code/01_Analyze-life-expectancy.R |  17 ++++-\n data/le_averages.csv              | 161 +++++++++++++++++++++++++++++++++++++++\n 2 files changed, 177 insertions(+), 1 deletion(-)\n create mode 100644 data/le_averages.csv"},{"path":"setup-of-solo-workflow.html","id":"checkout-a-new-branch","chapter":"5 Setup of Solo Workflow","heading":"5.29 Checkout a new branch","text":"git checkout -b may14-xy, replacing xy initials.","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git checkout -b may14-cr\nSwitched to a new branch 'may14-cr'"},{"path":"setup-of-solo-workflow.html","id":"update-the-dataset","chapter":"5 Setup of Solo Workflow","heading":"5.30 Update the dataset","text":"Update CSV file “Life-expectancy--state-long.csv” new dataset.\nFirst, decide want archive older version dataset reason.\n, decide store archived version move .\narchived version stay GitHub moved GitHub – \nfile organization system.Update CSV file “Life-expectancy--state-long.csv” new dataset.\nFirst, decide want archive older version dataset reason.\n, decide store archived version move .\narchived version stay GitHub moved GitHub – \nfile organization system.Move LEbsyrx.csv data folder rename name \nfile replacing (“Life-expectancy--state-long.csv”).Move LEbsyrx.csv data folder rename name \nfile replacing (“Life-expectancy--state-long.csv”).","code":""},{"path":"setup-of-solo-workflow.html","id":"re-run-the-analysis","chapter":"5 Setup of Solo Workflow","heading":"5.31 Re-run the analysis","text":"Re-run code uses file. First open .Rproj file launch\nRStudio. , can highlight code hit “Run” button.","code":""},{"path":"setup-of-solo-workflow.html","id":"track-the-changes-using-git","chapter":"5 Setup of Solo Workflow","heading":"5.32 Track the changes using Git","text":"Use “git status”, “git add…”, “git commit…” track changes\nlocally. Use “git push” push changes GitHub.Using git status, can see data files modified, \nimage file plot. new untracked folder called data/archive/\nmoved archived dataset.use git add specify new things want track:use git status confirm everything tracked:","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git status\nOn branch may14-cr\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n    modified:   data/Life-expectancy-by-state-long.csv\n    modified:   data/le_averages.csv\n    modified:   images/ca-black-women-LE.png\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n    .DS_Store\n    data/.DS_Store\n    data/archive/Biostat-MBP13-20:life-expectancy corinneriddell$ git add data/Life-expectancy-by-state-long.csv \nBiostat-MBP13-20:life-expectancy corinneriddell$ git add data/le_averages.csv \nBiostat-MBP13-20:life-expectancy corinneriddell$ git add images/ca-black-women-LE.png \nBiostat-MBP13-20:life-expectancy corinneriddell$ git add data/archive/Biostat-MBP13-20:life-expectancy corinneriddell$ git status\nOn branch may14-cr\nChanges to be committed:\n  (use \"git restore --staged <file>...\" to unstage)\n    modified:   data/Life-expectancy-by-state-long.csv\n    new file:   data/archive/Life-expectancy-by-state-long_old.csv\n    modified:   data/le_averages.csv\n    modified:   images/ca-black-women-LE.png\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n    .DS_Store\n    data/.DS_Store"},{"path":"setup-of-solo-workflow.html","id":"commit-the-changes-locally-1","chapter":"5 Setup of Solo Workflow","heading":"5.33 Commit the changes locally","text":"commit changes:","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git commit -m 'data update and downstream changes'\n[may14-cr c4b02db] data update and downstream changes\n 4 files changed, 7570 insertions(+), 369 deletions(-)\n create mode 100644 data/archive/Life-expectancy-by-state-long_old.csv\n rewrite images/ca-black-women-LE.png (98%)"},{"path":"setup-of-solo-workflow.html","id":"push-the-changes-to-github","chapter":"5 Setup of Solo Workflow","heading":"5.34 Push the changes to GitHub","text":"Finally push changes GitHub:","code":"git push origin may14-cr\nEnumerating objects: 14, done.\nCounting objects: 100% (14/14), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (8/8), done.\nWriting objects: 100% (8/8), 68.08 KiB | 9.73 MiB/s, done.\nTotal 8 (delta 3), reused 0 (delta 0)\nremote: Resolving deltas: 100% (3/3), completed with 3 local objects.\nTo https://github.com/corinne-riddell/life-expectancy.git\n   e15298a..c4b02db  may14-cr -> may14-cr\nBiostat-MBP13-20:life-expectancy corinneriddell$ \n"},{"path":"setup-of-solo-workflow.html","id":"submit-a-pull-request","chapter":"5 Setup of Solo Workflow","heading":"5.35 Submit a pull request","text":"Go process start pull request. pull request page,\nscroll see “diffs” data image. Pay close attention \nfiles changed:use “2-” “swiper” “onion skin” tools see changes saved figure.\ndata changed? tool prefer?can see rows data affected change?can tell data images change affected analytic findings?anything else noticed?","code":""},{"path":"setup-of-solo-workflow.html","id":"to-be-worked-in","chapter":"5 Setup of Solo Workflow","heading":"5.36 To be worked in","text":"Open .gitignore file text editor comfortable (e.g. nano notepad). Add following two lines : LBW COMMENT: CORINNE, WANT ADD ANYTHING GIT IGNORE?","code":""},{"path":"dos-and-donts-of-using-github.html","id":"dos-and-donts-of-using-github","chapter":"6 Do’s and Don’t’s of using GitHub","heading":"6 Do’s and Don’t’s of using GitHub","text":"","code":""},{"path":"dos-and-donts-of-using-github.html","id":"different-approaches-to-using-github-for-data-analysis","chapter":"6 Do’s and Don’t’s of using GitHub","heading":"6.1 Different approaches to using Github for data analysis","text":"","code":""},{"path":"dos-and-donts-of-using-github.html","id":"approach-1","chapter":"6 Do’s and Don’t’s of using GitHub","heading":"6.1.1 Approach 1","text":"people use Git Github track changes statistical code ., tracking code files R (.R .Rmd), \nSAS (.SAS), corresponding files whichever language use.add types files git ignore file git\nwon’t track accidentally push GitHub. include:\ndata files, word documents, pdfs, image files, etc – anything else \nputting github folder don’t want track.approach closely corresponds GitHub used software developers/\ncode writers, also option chosen researchers research\nteams depending objectives.","code":""},{"path":"dos-and-donts-of-using-github.html","id":"approach-2","chapter":"6 Do’s and Don’t’s of using GitHub","heading":"6.1.2 Approach 2","text":"people Git GitHub track larger set files. files might include data, images, documents.\ntracking non-code files, rules thumb:","code":""},{"path":"dos-and-donts-of-using-github.html","id":"data-files","chapter":"6 Do’s and Don’t’s of using GitHub","heading":"6.1.2.1 Data files","text":"Don’t track restricted data!Dont’ track large datasets! Git warn file exceeds 50 MB \nblock tracking files 100 MB larger. ensure files aren’t tracked, can store elsewhere (outside \ntracked Git folder), store tracked folder also listing file type .gitignore file.Generally, also doesn’t often make sense track large “raw” data file – big useful track changes file. may helpful track “intermediate data products”, files restricted. Intermediate data products might include aggregated datasets either reported directly used analysis. example, may access restricted dataset, data may become non-restricted aggregate level census tract. benefit tracking smaller dataset raw data updated, can easily see updates affect intermediate data products track . case need ensure reporting private/restricted data (eg cell counts 10 restricted often imposed aggregatedtables, reporting identifying features protected health information anything else allow anyone access identify\nindividuals.Data files track include anything plain text like csv files txt files (e.g., files can\nopen text editor). best tracking render nicely GitHub, can\neasily view differences files submit pull request. also track things like Excel files can’t easily view GitHub, benefits using GitHub apply files.","code":""},{"path":"dos-and-donts-of-using-github.html","id":"image-files","chapter":"6 Do’s and Don’t’s of using GitHub","heading":"6.1.2.2 Image files","text":"can also track image files (e.g., png, jpeg), plots/figures create \nreport. benefit tracking figures use image comparison tools GitHub see image pre/post change analysis. can super helpful modified something analysis already written results. track image, can easily see changed (point estimates confidence intervals, slope regression line, shading colored map). direct pay-making much easier revise written results can easily see changes using tools.\n* One thing careful uploading large images like \nones generated GIS analyses (large maps).\n* aren’t sure track image file, take look \nfile size. (look repositories epidemiologic analyses –\nimages < 1000 kb. 1 MB 4 MB – \nmaps images saved higher resolutions.)","code":""},{"path":"dos-and-donts-of-using-github.html","id":"documents","chapter":"6 Do’s and Don’t’s of using GitHub","heading":"6.1.2.3 Documents","text":"can also track reports manuscripts using GitHub. reports written plaintext language (e.g., R markdown, LaTeX) render nicely GitHub , permit see “diffs” made document pull request. Tracking pdfs permissible can’t easily see “diffs” updated. However, pdfs easily viewable GitHub.Tracking docx files also permissible, can’t easily see “diffs” easily viewable GitHub (since require MS Word render ).","code":""},{"path":"dos-and-donts-of-using-github.html","id":"things-you-definitely-do-not-want-to-track","chapter":"6 Do’s and Don’t’s of using GitHub","heading":"6.2 Things you definitely do not want to track","text":"Anything private restricted never want \ninadvertently share.includes passwords, API keys might use extract data.example, API key access Census data. include \nAPI key GitHub repository. methods writing code still\naccess key personal computer without writing explicitly \ncode.","code":""},{"path":"group-workflow.html","id":"group-workflow","chapter":"7 Group Workflow","heading":"7 Group Workflow","text":"","code":""},{"path":"group-workflow.html","id":"outline-for-this-section-1","chapter":"7 Group Workflow","heading":"7.1 Outline for this section","text":"Now, ’re going learn working collaboratively using Git GitHub.Setting shared repositoryFirst CommitCollaborative Routes\nIndependent Work\nCode Review\nDirect Edits\nIndependent WorkCode ReviewDirect EditsBig picture: Tracking Changes outside GitPractice","code":""},{"path":"group-workflow.html","id":"set-up","chapter":"7 Group Workflow","heading":"7.2 Set up","text":"Find partner: One lead researcher, colleague.Decide roles: lead researcher create repository, colleague contribute .","code":""},{"path":"group-workflow.html","id":"create-your-repository-person-1","chapter":"7 Group Workflow","heading":"7.3 Create your repository: Person 1","text":"One follow instructions one follow instructions next slide.","code":""},{"path":"group-workflow.html","id":"lead-researcher-person-1-create-a-new-repository-on-github.","chapter":"7 Group Workflow","heading":"7.3.1 Lead researcher (Person 1): Create a new repository on GitHub.","text":"Go GitHub, click “+” icon top-right corner, select New repository.Follow instructions solo exercise create new repository (add README, choose license, etc.).Add colleague collaborator going Settings > Collaborators > Add people. Ask colleague GitHub username add repository.","code":""},{"path":"group-workflow.html","id":"join-the-repository-person-2","chapter":"7 Group Workflow","heading":"7.4 Join the repository: Person 2","text":"follow person 1 instructions, follow !","code":""},{"path":"group-workflow.html","id":"person-2-colleague-accept-the-invitation-to-collaborate-on-the-repository.","chapter":"7 Group Workflow","heading":"7.4.1 Person 2 (Colleague): Accept the invitation to collaborate on the repository.","text":"Check email invitation collaborate repository.Accept invitation clicking link email.","code":""},{"path":"group-workflow.html","id":"clone-the-repository","chapter":"7 Group Workflow","heading":"7.5 Clone the repository","text":"","code":""},{"path":"group-workflow.html","id":"both-clone-the-repository","chapter":"7 Group Workflow","heading":"7.5.1 Both: Clone the repository","text":"Go main page repository clicking green Code button copying URL. , navigate location clone repository run following command terminal:","code":"git clone {repository URL}"},{"path":"group-workflow.html","id":"check-the-status-of-your-repository","chapter":"7 Group Workflow","heading":"7.6 Check the status of your repository","text":"Now repository cloned, set following steps morning. Let’s redo morning:Type git status. results shows changes made yet:","code":"Biostat-MBP13-20:life-expectancy corinneriddell$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree clean"},{"path":"group-workflow.html","id":"determine-the-branch-you-are-on","chapter":"7 Group Workflow","heading":"7.7 Determine the branch you are on","text":"Type git branch. shows currently main branch.","code":"Biostat-MBP13-20:life-expectancy corinneriddell$git branch\n* main"},{"path":"group-workflow.html","id":"create-a-new-branch","chapter":"7 Group Workflow","heading":"7.8 Create a new branch","text":"Now know repository cloned, date, main, can create new branch work .: Create new branch following command:Typing git branch show now new branch, though first line necessary create branch.","code":"git checkout -b {new-branch-name}\ngit branch"},{"path":"group-workflow.html","id":"collaborative-routes","chapter":"7 Group Workflow","heading":"7.9 Collaborative Routes","text":"Now go three different ways working collaboratively project:Independent Work: work separate files merge changes.Code Review: Submit pull requests code reviews without direct edits.Direct Edits: Submit pull requests make direct changes ’s code.","code":""},{"path":"group-workflow.html","id":"collaborative-routes-1","chapter":"7 Group Workflow","heading":"7.10 Collaborative Routes","text":"different routes may seem ambiguous right now, can think pull requests akin “Track Changes” “Comments” Microsoft Word Google Docs.Collaborative route #1 (Independent work) like creating two separate documents shared folder.Collaborative route #2 (Code review) like shared document can leave comments - think leave comments word document colleague.Collaborative route #3 (Direct edits) like shared document can make changes directly colleague’s work - think track changes.","code":""},{"path":"group-workflow.html","id":"collaborative-route-1-independent-work","chapter":"7 Group Workflow","heading":"7.11 Collaborative Route #1: Independent work","text":"work separate files merge changes. repository two files, one made!","code":""},{"path":"group-workflow.html","id":"collaborative-route-1-add-a-file","chapter":"7 Group Workflow","heading":"7.12 Collaborative Route #1: Add a file","text":"Lead researcher: Save code file brought workshop repository!Colleague: Save code file brought workshop repository!files different names , please make sure rename one !","code":""},{"path":"group-workflow.html","id":"collaborative-route-1-commit-our-new-file","chapter":"7 Group Workflow","heading":"7.13 Collaborative Route #1: Commit our new file","text":": Add, commit, push file GitHub shown.","code":"git add {file-name}.R\ngit commit -m \"Initial commit with {file-name}\"\ngit push origin {new-branch-name}"},{"path":"group-workflow.html","id":"collaborative-route-1-create-a-pull-request","chapter":"7 Group Workflow","heading":"7.14 Collaborative Route #1: Create a pull request","text":"’ll thing earlier today:Navigate GitHub.com repository’s URL. pale yellow\nbanner informing changes just pushed. Click button\n“Compare & pull request”. Notice title commit message \nprevious step. Scroll . Look files added.code shown green, indicating every line code new.","code":""},{"path":"group-workflow.html","id":"collaborative-route-1-merge-the-changes-from-your-branch-into-main","chapter":"7 Group Workflow","heading":"7.15 Collaborative Route #1: Merge the changes from your branch into main","text":":\n, earlier today:Click green “Create pull request” button. Github check \nable merge branch main without problems. Note message “\nbranch conflicts base branch”. means good go!Click green “Merge pull request” button.Click green “Confirm merge” button.Click “Delete branch” button.","code":""},{"path":"group-workflow.html","id":"collaborative-route-1-lets-look-at-our-main-branch-now","chapter":"7 Group Workflow","heading":"7.16 Collaborative Route #1: Let’s look at our main branch now","text":":\n- Go main Code page take look code main (existing branch repository).\n- see files created previous steps.","code":""},{"path":"group-workflow.html","id":"collaborative-route-1-recap","chapter":"7 Group Workflow","heading":"7.17 Collaborative Route #1: Recap","text":"now successfully completed first collaborative route. created file, committed , merged main branch. worked different files merge conflicts interaction, now access ’s work!","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-code-review","chapter":"7 Group Workflow","heading":"7.18 Collaborative Route #2: Code Review","text":"code review style collaborative approach, lead researcher make new file, make changes file push GitHub. colleague review changes submitting comments pull request.","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-create-a-new-branch","chapter":"7 Group Workflow","heading":"7.19 Collaborative Route #2: Create a new branch","text":"Lead researcher: Create new branch following command:Typing git branch show now new branch, though first line necessary create branch.","code":"git checkout -b {new-branch-name}\ngit branch"},{"path":"group-workflow.html","id":"collaborative-route-2-lead-researcher-makes-changes-to-a-file","chapter":"7 Group Workflow","heading":"7.20 Collaborative Route #2: Lead Researcher makes changes to a file","text":"Lead Researcher: Make change file used . can add comment new line code - something small. Save file.","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-push-your-changes","chapter":"7 Group Workflow","heading":"7.21 Collaborative Route #2: Push Your Changes","text":"Lead Researcher: Add, commit, push new file changes branch GitHub.","code":"git add {file-name}\ngit commit -m \"{your description of what you changed}\"\ngit push origin {your-branch-name}"},{"path":"group-workflow.html","id":"collaborative-route-2-create-a-pull-request","chapter":"7 Group Workflow","heading":"7.22 Collaborative Route #2: Create a Pull Request","text":"Lead Researcher: Go GitHub repository page. see notification recent push. Click “Compare & pull request” next branch.Fill details pull request, explaining ’ve added changed .time, add colleague reviewer. immediately merge time!Submit pull request.","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-colleague-reviews-the-pull-request","chapter":"7 Group Workflow","heading":"7.23 Collaborative Route #2: Colleague Reviews the Pull Request","text":"Colleague: pull request submitted, receive email telling lead researcher requested review PR #{X}.Click view GitHub bring GitHub yellow box top.Click Add review yellow box. click Review changes green right corner.Leave comments pull request clicking plus signs next chunks code. can leave multiple comments feedback can include suggestions, questions, general feedback code. Focus clarity, efficiency, potential errors might notice.’re finished commenting, click Finish review green top right.","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-colleague-reviews-the-pull-request-1","chapter":"7 Group Workflow","heading":"7.24 Collaborative Route #2: Colleague Reviews the Pull Request","text":"Submit comments. can either:\nComment: submits feedback without explicitly approving PR.\nApprove: submits feedback approves PR merging main.\nRequest Changes: Submit feedback person needs address can merge main.\nComment: submits feedback without explicitly approving PR.Approve: submits feedback approves PR merging main.Request Changes: Submit feedback person needs address can merge main.","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-pull-request-review-options","chapter":"7 Group Workflow","heading":"7.25 Collaborative Route #2: Pull Request Review Options","text":"Comment: submits feedback without explicitly approving PR.send lead researcher email comments code. lead researcher can click View GitHub see comments. can reply /merge PR main point.can used either FYI start conversation code - e.g. maybe certain function new want ask chose use .may want use workflow always want person wrote code merging.","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-pull-request-review-options-1","chapter":"7 Group Workflow","heading":"7.26 Collaborative Route #2: Pull Request Review Options","text":"Approve: submits feedback approves PR merging main.send lead researcher email comments also indicate PR approved.option can used FYI - e.g. telling alternate function use .Either person can merge PR main. can establish norms around work colleagues - right answer!","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-pull-request-review-options-2","chapter":"7 Group Workflow","heading":"7.27 Collaborative Route #2: Pull Request Review Options","text":"Request Changes: Submit feedback person needs address can merge main.send lead researcher email comments also indicate PR needs changes.option can used see something needs change PR can merged - e.g. function working intended.lead researcher need address comments can merge PR main.NOTE: Technically, PR merged without changes, good practice.","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-your-turn-crlbw-this-slide-needs-to-be-refined","chapter":"7 Group Workflow","heading":"7.28 Collaborative Route #2: Your turn [CR/LBW: THIS SLIDE NEEDS TO BE REFINED]","text":"Colleague: Review changes made lead researcher pull request. Leave comments code needed. Choose whichever option think best.Lead Researcher: Review comments made colleague. Make necessary changes code based feedback.Add, commit, push changes branch. automatically update pull request.Colleague receive email saying lead researcher pushed one commit. point, colleague can click View GitHub verify changes sufficient.Now can restart process either comment, comment approve, comment request changes !","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-finalizing-the-pull-request-crlbw-this-slide-needs-to-be-refined","chapter":"7 Group Workflow","heading":"7.29 Collaborative Route #2: Finalizing the Pull Request [CR/LBW: THIS SLIDE NEEDS TO BE REFINED]","text":"Colleague: Review changes made lead researcher response comments. ’re satisfied updates, approve pull request.Lead Researcher: pull request approved, merge changes main branch.","code":""},{"path":"group-workflow.html","id":"collaborative-route-2-recap","chapter":"7 Group Workflow","heading":"7.30 Collaborative Route #2: Recap","text":"now practiced using Git code review! used Git review/check/comment colleague’s work without emailing copying/pasting code back forth. lead researcher made changes code based feedback, worked together finalize pull request.","code":""},{"path":"group-workflow.html","id":"collaborative-route-3-direct-edits","chapter":"7 Group Workflow","heading":"7.31 Collaborative Route #3: Direct Edits","text":"CR/LBW: WANT COVER ?scenario, colleague pushes code, submit pull request , directly edit code needed. may useful one person stuck certain piece code, working closely together one script.","code":""},{"path":"group-workflow.html","id":"collaborative-route-3-create-a-new-branch","chapter":"7 Group Workflow","heading":"7.32 Collaborative Route #3: Create a new branch","text":"Colleague: Create new branch following command:Typing git branch show now new branch, though first line necessary create branch.","code":"git checkout -b {new-branch-name}\ngit branch"},{"path":"group-workflow.html","id":"collaborative-route-3-colleague-creates-a-file","chapter":"7 Group Workflow","heading":"7.33 Collaborative Route #3: Colleague Creates a File","text":"Colleague: Make change file used . can add comment new line code - something small. Save file.","code":""},{"path":"group-workflow.html","id":"collaborative-route-3-push-your-changes","chapter":"7 Group Workflow","heading":"7.34 Collaborative Route #3: Push Your Changes","text":"Colleague: Add, commit, push new file changes branch GitHub.","code":"git add {file-name}\ngit commit -m \"{your description of what you changed}\"\ngit push origin {your-branch-name}"},{"path":"group-workflow.html","id":"collaborative-route-3-create-a-pull-request","chapter":"7 Group Workflow","heading":"7.35 Collaborative Route #3: Create a Pull Request","text":"Colleague: Go GitHub repository page. see notification recent push. Click “Compare & pull request” next branch.Fill details pull request, explaining ’ve added changed .time, add lead researcher reviewer. immediately merge time!Submit pull request.","code":""},{"path":"group-workflow.html","id":"collaborative-route-3-lead-researcher-makes-direct-edits","chapter":"7 Group Workflow","heading":"7.36 Collaborative Route #3: Lead researcher makes direct edits","text":"Lead Researcher: Review code pull request. Look section comment asking help, make direct edits code pull request.","code":""},{"path":"group-workflow.html","id":"collaborative-route-3-commit-the-changes","chapter":"7 Group Workflow","heading":"7.37 Collaborative Route #3: Commit the Changes","text":"CR/LBW: SLIDE REFINED PRACTICE TOGETHERAfter making direct edits, push changes back branch.: Review final changes together, discuss modifications, merge pull requests main branch.","code":""},{"path":"group-workflow.html","id":"collaborative-route-3-recap","chapter":"7 Group Workflow","heading":"7.38 Collaborative Route #3: Recap","text":"route directly edited colleague’s code. can useful one person knows something another person stuck , code collaboration. may common work, valuable tool helping someone code!","code":""},{"path":"group-workflow.html","id":"merge-conflicts","chapter":"7 Group Workflow","heading":"7.39 Merge conflicts","text":"","code":""},{"path":"group-workflow.html","id":"practicing-a-merge-conflict","chapter":"7 Group Workflow","heading":"7.40 Practicing a merge conflict","text":"occurs XXX.","code":""},{"path":"group-workflow.html","id":"practicing-a-merge-conflict-1","chapter":"7 Group Workflow","heading":"7.41 Practicing a merge conflict","text":":\n- partipiants main now. , please git checkout main git pull origin main make sure date.\n- participants make checkout new branch: git checkout -b {new-branch-name}\n- participants make change line code file. can choose whichever file want use. Edit last line file make easier use practice.\n- Lead Researcher: Add, commit, push changes branch. Create pull request merge changes main.\n- Colleague: Add, commit, push changes branch. Create pull request able merge main.","code":""},{"path":"group-workflow.html","id":"practicing-a-merge-conflict-2","chapter":"7 Group Workflow","heading":"7.42 Practicing a merge conflict","text":"Colleague: see following.","code":""},{"path":"group-workflow.html","id":"practicing-a-merge-conflict-3","chapter":"7 Group Workflow","heading":"7.43 Practicing a merge conflict","text":"Colleague: Click View Pull Request begin resolving merge conflict. click View Pull Request, see following.","code":""},{"path":"group-workflow.html","id":"practicing-a-merge-conflict-4","chapter":"7 Group Workflow","heading":"7.44 Practicing a merge conflict","text":"Colleague: Click Resolve conflicts begin resolving merge conflict. click Resolve conflicts, see following:","code":""},{"path":"group-workflow.html","id":"practicing-a-merge-conflict-5","chapter":"7 Group Workflow","heading":"7.45 Practicing a merge conflict","text":": Together, look code file. Decide edits keep. exercise, abritrary edits keep. However, keep mind real life make decision informed way.choose keep, take >>> === <<< lines, well lines person whose code keeping. finished, click Mark resolved top right corner.Note: still GitHub, terminal.","code":""},{"path":"group-workflow.html","id":"practicing-a-merge-conflict-6","chapter":"7 Group Workflow","heading":"7.46 Practicing a merge conflict","text":"Now clicked Mark resolved, see green checkmark next file name, say Resolved top right corner. also green button top right corner says Commit merge. Click button.brings back page familiar , can merge main. Click Merge pull request Confirm merge. can delete branch usually .just resolved first merge conflict!CR/LBW: add conclusion slides\nmake sure mention else fails, blow repo.","code":""},{"path":"daily-git-practice-cheat-sheet.html","id":"daily-git-practice-cheat-sheet","chapter":"8 Daily Git Practice: Cheat Sheet","heading":"8 Daily Git Practice: Cheat Sheet","text":"Use instructions day working repository good practice!Go terminal type git checkout main enter.Type git pull enter. pull changes made day get ready start clean branch today.Type git branch -d {branch-name} enter. Remember replace {branch-name} branch name.now main next lab!starting anything lab, go terminal.Navigate repository using cd.Create checkout new branch typing git checkout -b {new-branch-name}. Replace {new-branch-name} new branch name. may something like {-initials_date}.work day.done, add changes staging area going back terminal (repository directory) typing git add {file-names}. can add files edited day. unsure files changed, type git status see files modified thus staged commit!Commit changes typing git commit -m \"{commit-message}\". Replace {commit-message} commit message.Push changes remote repository typing git push origin {new-branch-name}. Replace {new-branch-name} new branch name.Go repository GitHub.First go Code tab, change branch, see code just worked ! now GitHub!Click Pull requests tab.Click green New pull request button.Click green Create pull request button.Click green Merge pull request button.Click green Confirm merge button.Delete branch prompted.now ready next day!","code":""}]
